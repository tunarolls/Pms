// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pms.Payrolls.Persistence;

namespace Pms.Payrolls.Migrations
{
    [DbContext(typeof(PayrollDbContext))]
    [Migration("20220825064106_addedCompanyIdToPayrollEntity")]
    partial class addedCompanyIdToPayrollEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Pms.Payrolls.Company", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasColumnType("VARCHAR(35)");

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("RegisteredName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Site")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("TIN")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("CompanyId");

                    b.ToTable("company");
                });

            modelBuilder.Entity("Pms.Payrolls.EmployeeView", b =>
                {
                    b.Property<string>("EEId")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("text");

                    b.Property<string>("BankCategory")
                        .HasColumnType("text");

                    b.Property<string>("CardNumber")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("PayrollCode")
                        .HasColumnType("text");

                    b.Property<string>("TIN")
                        .HasColumnType("text");

                    b.HasKey("EEId");

                    b.ToView("masterlist");
                });

            modelBuilder.Entity("Pms.Payrolls.Payroll", b =>
                {
                    b.Property<string>("PayrollId")
                        .HasColumnType("VARCHAR(35)");

                    b.Property<double>("AbsTar")
                        .HasColumnType("DOUBLE(6,2)");

                    b.Property<double>("Adjust1Total")
                        .HasColumnType("DOUBLE(9,2)");

                    b.Property<double>("Adjust2Total")
                        .HasColumnType("DOUBLE(9,2)");

                    b.Property<int>("Bank")
                        .HasColumnType("int");

                    b.Property<string>("BankCategory")
                        .HasColumnType("VARCHAR(6)");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(35)");

                    b.Property<string>("CutoffId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("EEId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(8)");

                    b.Property<double>("EmployeePagibig")
                        .HasColumnType("DOUBLE(9,2)");

                    b.Property<double>("EmployeePhilHealth")
                        .HasColumnType("DOUBLE(9,2)");

                    b.Property<double>("EmployeeSSS")
                        .HasColumnType("DOUBLE(9,2)");

                    b.Property<double>("GovernmentTotal")
                        .HasColumnType("DOUBLE(9,2)");

                    b.Property<double>("GrossPay")
                        .HasColumnType("DOUBLE(9,2)");

                    b.Property<double>("HolidayOvertime")
                        .HasColumnType("DOUBLE(6,2)");

                    b.Property<double>("NetPay")
                        .HasColumnType("DOUBLE(9,2)");

                    b.Property<double>("NightDifferential")
                        .HasColumnType("DOUBLE(6,2)");

                    b.Property<double>("Overtime")
                        .HasColumnType("DOUBLE(6,2)");

                    b.Property<string>("PayrollCode")
                        .HasColumnType("VARCHAR(6)");

                    b.Property<double>("RegHours")
                        .HasColumnType("DOUBLE(6,2)");

                    b.Property<double>("RegPay")
                        .HasColumnType("DOUBLE(9,2)");

                    b.Property<double>("RestDayOvertime")
                        .HasColumnType("DOUBLE(6,2)");

                    b.Property<double>("WithholdingTax")
                        .HasColumnType("DOUBLE(9,2)");

                    b.Property<int>("YearCovered")
                        .HasColumnType("INT(4)");

                    b.HasKey("PayrollId");

                    b.HasIndex("EEId");

                    b.ToTable("payroll");
                });

            modelBuilder.Entity("Pms.Payrolls.TimesheetView", b =>
                {
                    b.Property<string>("TimesheetId")
                        .HasColumnType("VARCHAR(35)")
                        .HasColumnName("Id");

                    b.Property<string>("BankCategory")
                        .HasColumnType("text");

                    b.Property<string>("CutoffId")
                        .HasColumnType("text");

                    b.Property<string>("EEId")
                        .HasColumnType("text");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("VARCHAR(35)");

                    b.Property<string>("PayrollCode")
                        .HasColumnType("text");

                    b.Property<double>("TotalHOT")
                        .HasColumnType("double");

                    b.Property<double>("TotalHours")
                        .HasColumnType("double");

                    b.Property<double>("TotalND")
                        .HasColumnType("double");

                    b.Property<double>("TotalOT")
                        .HasColumnType("double");

                    b.Property<double>("TotalRDOT")
                        .HasColumnType("double");

                    b.Property<double>("TotalTardy")
                        .HasColumnType("double");

                    b.HasKey("TimesheetId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToView("timesheet");
                });

            modelBuilder.Entity("Pms.Payrolls.Payroll", b =>
                {
                    b.HasOne("Pms.Payrolls.EmployeeView", "EE")
                        .WithMany()
                        .HasForeignKey("EEId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EE");
                });

            modelBuilder.Entity("Pms.Payrolls.TimesheetView", b =>
                {
                    b.HasOne("Pms.Payrolls.Payroll", null)
                        .WithOne("TS")
                        .HasForeignKey("Pms.Payrolls.TimesheetView", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pms.Payrolls.Payroll", b =>
                {
                    b.Navigation("TS");
                });
#pragma warning restore 612, 618
        }
    }
}
